---

#TODO: feel good about replacing the current keys on bender
# - name: Copy Remote-To-Remote (from serverA to serverB)
#   synchronize: src={{ unix_admin.home }}/.ssh dest={{ unix_admin.home }}/.ssh
#   delegate_to: bender

- name: ensure ssh directory exists and set perms
  file: >
    path="{{ unix_admin.sshdir }}"
    state=directory
    recurse=yes
    owner="{{ unix_admin.primary_group }}"
    group="{{ unix_admin.primary_group }}"
    mode=0700
  tags: ['keys']

- name: check if ssh private key exists
  stat: path="{{ unix_admin.sshdir }}/id_rsa"
  register: haskeys
  tags: ['keys']

- name: copy ssh keys unless a private key already exists
  synchronize:
      src: "{{ unix_admin.sshdir }}"
      dest: "{{ unix_admin.home }}"
      perms: yes
  become: yes
  become_user: "{{ unix_admin.name }}"
  # delegate_to: bender
  when: not haskeys.stat.exists
  tags: ['keys']

- name: check if file and/or directory exists
  stat: "path=/etc/sudoers.d/10-unix_admin"
  register: hazifile
  tags: ['sudoers']

- lineinfile:
    path: /etc/sudoers.d/10-unix_admin
    line: '{{ unix_admin.name }} ALL=(ALL) NOPASSWD: ALL'
    create: yes
    validate: 'visudo -cf %s'
  when: not hazifile.stat.exists
  tags: ['sudoers']

- name: create user group(s)
  group: name={{ item.name }} state=present gid={{ item.gid }}
  with_items: "{{ user_groups }}"

- name: create system groups
  group: name={{ item }} state=present system=yes
  with_items:
    - storage
  when: sysgroups is defined

- name: add this user to desired groups
  user: >
    name={{ unix_admin.name }}
    uid={{ unix_admin.uid }}
    groups={{ unix_admin.secondary_groups }}
    append=yes
    state=present
  when: sysgroups is defined

- name: like sudoers for polkit
  template: >
    src=49-nopasswd_global.rules.j2
    dest=/etc/polkit-1/rules.d/49-nopasswd_global.rules
    owner=0
    group=0
    mode=0644
    backup=yes
  tags: ['polkit','user']
