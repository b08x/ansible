---

#TODO: feel good about replacing the current keys on bender
# - name: Copy Remote-To-Remote (from serverA to serverB)
#   synchronize: src={{ user.home }}/.ssh dest={{ user.home }}/.ssh
#   delegate_to: bender

# - name: ensure ssh directory exists and set perms
#   file: >
#     path="{{ user.sshdir }}"
#     state=directory
#     recurse=yes
#     owner="{{ user.primary_group }}"
#     group="{{ user.primary_group }}"
#     mode=0700
#   tags: ['keys']
#
# - name: check if ssh private key exists
#   stat: path="{{ user.sshdir }}/id_rsa"
#   register: haskeys
#   tags: ['keys']
#
# - name: copy ssh keys unless a private key already exists
#   synchronize:
#       src: "{{ user.sshdir }}"
#       dest: "{{ user.home }}"
#       perms: yes
#   become: yes
#   become_user: "{{ user.name }}"
#   # delegate_to: bender
#   when: not haskeys.stat.exists
#   tags: ['keys']

- name: create user group(s)
  group: name={{ item.name }} state=present gid={{ item.gid }}
  with_items: "{{ user_groups }}"

- name: add this user to desired groups
  user: >
    name="{{ user.name }}"
    uid="{{ user.uid }}"
    groups="{{ user.secondary_groups }}"
    shell="{{ user.shell }}"
    append=yes
    state=present
  ignore_errors: true

- name: check if dots have been cloned
  shell:  yadm status
  args:
    chdir: "{{ user.home }}"
  become: yes
  become_user: "{{ user.name }}"
  register: yadm_status
  ignore_errors: true

- name: clone dotfiles
  command: yadm clone "{{ dotfiles.url }}"
  become: yes
  become_user: "{{ user.name }}"
  args:
    chdir: "{{ user.home }}"
  when: yadm_status.rc != 0
